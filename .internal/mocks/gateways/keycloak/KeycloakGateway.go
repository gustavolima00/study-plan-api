// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	context "context"

	keycloak "go-api/models/keycloak"

	mock "github.com/stretchr/testify/mock"
)

// KeycloakGateway is an autogenerated mock type for the KeycloakGateway type
type KeycloakGateway struct {
	mock.Mock
}

type KeycloakGateway_Expecter struct {
	mock *mock.Mock
}

func (_m *KeycloakGateway) EXPECT() *KeycloakGateway_Expecter {
	return &KeycloakGateway_Expecter{mock: &_m.Mock}
}

// Login provides a mock function with given fields: ctx, username, password
func (_m *KeycloakGateway) Login(ctx context.Context, username string, password string) (*keycloak.GetOIDCTokenResponse, error) {
	ret := _m.Called(ctx, username, password)

	if len(ret) == 0 {
		panic("no return value specified for Login")
	}

	var r0 *keycloak.GetOIDCTokenResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) (*keycloak.GetOIDCTokenResponse, error)); ok {
		return rf(ctx, username, password)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, string) *keycloak.GetOIDCTokenResponse); ok {
		r0 = rf(ctx, username, password)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*keycloak.GetOIDCTokenResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, string) error); ok {
		r1 = rf(ctx, username, password)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// KeycloakGateway_Login_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Login'
type KeycloakGateway_Login_Call struct {
	*mock.Call
}

// Login is a helper method to define mock.On call
//   - ctx context.Context
//   - username string
//   - password string
func (_e *KeycloakGateway_Expecter) Login(ctx interface{}, username interface{}, password interface{}) *KeycloakGateway_Login_Call {
	return &KeycloakGateway_Login_Call{Call: _e.mock.On("Login", ctx, username, password)}
}

func (_c *KeycloakGateway_Login_Call) Run(run func(ctx context.Context, username string, password string)) *KeycloakGateway_Login_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *KeycloakGateway_Login_Call) Return(_a0 *keycloak.GetOIDCTokenResponse, _a1 error) *KeycloakGateway_Login_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *KeycloakGateway_Login_Call) RunAndReturn(run func(context.Context, string, string) (*keycloak.GetOIDCTokenResponse, error)) *KeycloakGateway_Login_Call {
	_c.Call.Return(run)
	return _c
}

// Refresh provides a mock function with given fields: ctx, refreshToken
func (_m *KeycloakGateway) Refresh(ctx context.Context, refreshToken string) (*keycloak.GetOIDCTokenResponse, error) {
	ret := _m.Called(ctx, refreshToken)

	if len(ret) == 0 {
		panic("no return value specified for Refresh")
	}

	var r0 *keycloak.GetOIDCTokenResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (*keycloak.GetOIDCTokenResponse, error)); ok {
		return rf(ctx, refreshToken)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) *keycloak.GetOIDCTokenResponse); ok {
		r0 = rf(ctx, refreshToken)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*keycloak.GetOIDCTokenResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, refreshToken)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// KeycloakGateway_Refresh_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Refresh'
type KeycloakGateway_Refresh_Call struct {
	*mock.Call
}

// Refresh is a helper method to define mock.On call
//   - ctx context.Context
//   - refreshToken string
func (_e *KeycloakGateway_Expecter) Refresh(ctx interface{}, refreshToken interface{}) *KeycloakGateway_Refresh_Call {
	return &KeycloakGateway_Refresh_Call{Call: _e.mock.On("Refresh", ctx, refreshToken)}
}

func (_c *KeycloakGateway_Refresh_Call) Run(run func(ctx context.Context, refreshToken string)) *KeycloakGateway_Refresh_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *KeycloakGateway_Refresh_Call) Return(_a0 *keycloak.GetOIDCTokenResponse, _a1 error) *KeycloakGateway_Refresh_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *KeycloakGateway_Refresh_Call) RunAndReturn(run func(context.Context, string) (*keycloak.GetOIDCTokenResponse, error)) *KeycloakGateway_Refresh_Call {
	_c.Call.Return(run)
	return _c
}

// VerifyToken provides a mock function with given fields: ctx, accessToken
func (_m *KeycloakGateway) VerifyToken(ctx context.Context, accessToken string) (*keycloak.IntrospectOIDCTokenResponse, error) {
	ret := _m.Called(ctx, accessToken)

	if len(ret) == 0 {
		panic("no return value specified for VerifyToken")
	}

	var r0 *keycloak.IntrospectOIDCTokenResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (*keycloak.IntrospectOIDCTokenResponse, error)); ok {
		return rf(ctx, accessToken)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) *keycloak.IntrospectOIDCTokenResponse); ok {
		r0 = rf(ctx, accessToken)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*keycloak.IntrospectOIDCTokenResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, accessToken)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// KeycloakGateway_VerifyToken_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'VerifyToken'
type KeycloakGateway_VerifyToken_Call struct {
	*mock.Call
}

// VerifyToken is a helper method to define mock.On call
//   - ctx context.Context
//   - accessToken string
func (_e *KeycloakGateway_Expecter) VerifyToken(ctx interface{}, accessToken interface{}) *KeycloakGateway_VerifyToken_Call {
	return &KeycloakGateway_VerifyToken_Call{Call: _e.mock.On("VerifyToken", ctx, accessToken)}
}

func (_c *KeycloakGateway_VerifyToken_Call) Run(run func(ctx context.Context, accessToken string)) *KeycloakGateway_VerifyToken_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *KeycloakGateway_VerifyToken_Call) Return(_a0 *keycloak.IntrospectOIDCTokenResponse, _a1 error) *KeycloakGateway_VerifyToken_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *KeycloakGateway_VerifyToken_Call) RunAndReturn(run func(context.Context, string) (*keycloak.IntrospectOIDCTokenResponse, error)) *KeycloakGateway_VerifyToken_Call {
	_c.Call.Return(run)
	return _c
}

// NewKeycloakGateway creates a new instance of KeycloakGateway. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewKeycloakGateway(t interface {
	mock.TestingT
	Cleanup(func())
}) *KeycloakGateway {
	mock := &KeycloakGateway{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

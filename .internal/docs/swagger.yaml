basePath: /
definitions:
  auth.Account:
    properties:
      roles:
        items:
          type: string
        type: array
    type: object
  auth.CreateSessionRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  auth.FinishSessionRequest:
    properties:
      access_token:
        type: string
    required:
    - access_token
    type: object
  auth.FinishSessionResponse:
    type: object
  auth.ResourceAccess:
    properties:
      account:
        $ref: '#/definitions/auth.Account'
    type: object
  auth.SessionInfo:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      refresh_expires_in:
        type: integer
      refresh_token:
        type: string
      scope:
        type: string
      session_state:
        type: string
      token_type:
        type: string
    type: object
  auth.UpdateSessionRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  auth.UserInfo:
    properties:
      email:
        type: string
      email_verified:
        type: boolean
      family_name:
        type: string
      given_name:
        type: string
      name:
        type: string
      preferred_username:
        type: string
      resource_access:
        $ref: '#/definitions/auth.ResourceAccess'
      username:
        type: string
      uuid:
        type: string
    type: object
  healthcheck.Status:
    properties:
      online_time:
        type: string
    type: object
  studysession.AddStudySessionEventsRequest:
    properties:
      events:
        items:
          $ref: '#/definitions/studysession.SessionEvent'
        type: array
    type: object
  studysession.EventType:
    enum:
    - start
    - pause
    - resume
    - stop
    type: string
    x-enum-varnames:
    - EventTypeStart
    - EventTypePause
    - EventTypeResume
    - EventTypeStop
  studysession.FinishStudySessionRequest:
    properties:
      finished_at:
        type: string
    type: object
  studysession.SessionEvent:
    properties:
      event_time:
        type: string
      event_type:
        $ref: '#/definitions/studysession.EventType'
    type: object
  studysession.SessionState:
    enum:
    - active
    - completed
    type: string
    x-enum-varnames:
    - SessionStateActive
    - SessionStateCompleted
  studysession.StudySession:
    properties:
      date:
        type: string
      id:
        type: string
      notes:
        type: string
      session_state:
        $ref: '#/definitions/studysession.SessionState'
      title:
        type: string
      user_id:
        type: string
    type: object
  studysession.UpsertActiveStudySessionRequest:
    properties:
      notes:
        type: string
      started_at:
        type: string
      title:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample API for Go using Swagger
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Go Sample API
  version: "1.0"
paths:
  /:
    get:
      description: Get the status of the API
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/healthcheck.Status'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get API status
      tags:
      - healthcheck
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return tokens
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.CreateSessionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.SessionInfo'
        "400":
          description: Invalid request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: User login
      tags:
      - authentication
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Revoke user tokens and end session
      parameters:
      - description: Refresh token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.FinishSessionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success response
          schema:
            $ref: '#/definitions/auth.FinishSessionResponse'
        "400":
          description: Invalid request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Logout and revoke user tokens
      tags:
      - authentication
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Generate new access token using refresh token
      parameters:
      - description: Refresh token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.UpdateSessionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.SessionInfo'
        "400":
          description: Invalid request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Refresh tokens
      tags:
      - authentication
  /auth/user:
    get:
      description: Returns information about the currently authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: User information
          schema:
            $ref: '#/definitions/auth.UserInfo'
        "401":
          description: Unauthorized - Missing or invalid token
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get user info
      tags:
      - authentication
  /study-session:
    get:
      description: Get the user's active study session
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/studysession.StudySession'
        "404":
          description: No active session found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get active study session
      tags:
      - study-session
  /study-session/events:
    get:
      description: Get events for the user's active study session
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/studysession.SessionEvent'
            type: array
        "404":
          description: No active session found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get active study session events
      tags:
      - study-session
    post:
      consumes:
      - application/json
      description: Add events to the user's active study session
      parameters:
      - description: Session events data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/studysession.AddStudySessionEventsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/studysession.StudySession'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: No active session found
          schema:
            additionalProperties:
              type: string
            type: object
        "422":
          description: Session not active
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Add events to active study session
      tags:
      - study-session
  /study-session/finish:
    post:
      consumes:
      - application/json
      description: Finish the user's active study session
      parameters:
      - description: Finish session data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/studysession.FinishStudySessionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/studysession.StudySession'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: No active session found
          schema:
            additionalProperties:
              type: string
            type: object
        "422":
          description: Session not active
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Finish active study session
      tags:
      - study-session
  /study-session/start:
    post:
      consumes:
      - application/json
      description: Create a new study session for the authenticated user
      parameters:
      - description: Study session data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/studysession.UpsertActiveStudySessionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/studysession.StudySession'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Active session already exists
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a study session
      tags:
      - study-session
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and the access token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
